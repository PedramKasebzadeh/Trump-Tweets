}
cat("(",c,":",temp,")")
cat("(",c[],":",temp[],")")
cat("(",c[],":",temp[],")")
b = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
c = c("A", "B", "C", "D")
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2=cat("(",c[i],":",temp[i],")")
}
p = c(1,2,3,4)
cat(p)
cat((p:e))
p = c(1,2,3,4)
e = c("a","b","c","d")
cat((p:e))
cat((p,":",e))
cat(p,":",e)
cat(p[],":",e)
cat(p[1:3],":",e[1:3])
for(i in 1:4){
cat("(",c[i:3],":",temp[i:3],")")
}
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
#t2=cat("(",c[i],":",temp[i],")")
}
for(i in 1:4){
cat("(",c[i:3],":",temp[i:3],")")
}
temp = c()
t2 = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
#t2=cat("(",c[i],":",temp[i],")")
}
for(i in 1:4){
cat("(",c[i:3],":",temp[i:3],")")
}
cat(p[1:3],":",e[1:3])
cat(p[1],":",e[1])
paste(p,e)
paste(p,":",e)
paste(p,":",e,")")
paste("(",p,":",e,")")
paste("("p,":",e,")")
?paste
paste("(",p,":",e,")",sep = "")
paste0("(",p,":",e,")",sep = "")
paste(cat("(",p,":",e,")",sep = ""))
0
paste("(",p,":",e,")",sep = "")
paste("(",p,":",e,")",sep = " ")
paste("(",p,":",e,")","-",sep = "")
cat(p[1],":",e[1],sep = "-")
paste(cat(p[1],":",e[1]),sep = "-")
paste(cat(p,":",e),sep = "-")
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2=paste(cat("(",c[i],":",temp[i],")"),sep="-")
}
temp = c()
t2 = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(cat("(",c[i],":",temp[i],")"),sep="-")
}
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(cat("(",c[i],":",temp[i],")") ,sep="-")
}
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"))
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"))
}
temp = c()
t2 = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"))
}
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
temp = c()
t2 = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
paste(p,sep = "-")
cat(p,sep = "-")
p = list(1,2,3,4)
cat(p,sep = "-")
paste(p,sep = "-")
p
as.vector(p)
unlist(p)
res = list()
temp = list()
t2 = list()
temp = c()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[i] = temp
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[i] = temp
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
t2
i=1
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
temp
temp = c()
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
temp
i=2
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
temp
t2[i] = temp
t2[[i]] = temp
t2
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[[i]] = temp
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
t2
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[[i]] = c(temp[i],":",cats[i])
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
t2
unlist(t2)
t2[[i]] = sprintf(temp[i],":",cats[i])
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[[i]] = sprintf(temp[i],":",cats[i])
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
t2[[i]] = sprintf(temp[i],cats[i])
paste0(paste(cat("(",c[i],":",temp[i],")") ,sep="-"),sep="-")
}
sprintf(p,sep = "-")
sprintf(p,e)
sprintf(p)
temp = c()
t2 = list()
for(i in 1:length(c)){
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
cat("(",c[i],":",temp[i],")",collapse="-")
}
i=1
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
temp = c()
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
b = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
c = c("A", "B", "C", "D")
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
cat("(",c[i],":",temp[i],")",collapse="-")
}
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste("(",c[i],":",temp[i],")",collapse="-")
}
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste("(",c[i],":",temp[i],")",collapse="-")
}
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste("(",c[i],":",temp[i],")",collapse="-")
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste("(",c[i],":",temp[i],")",collapse="-")
}
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
paste0("(",c[i],":",temp[i],")",collapse="-")
}
paste0("(",c[i],":",temp[i],")",collapse="-")
paste0("(",c,":",temp,")",collapse="-")
b = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
c = c("A", "B", "C", "D")
quantities = sapply(strsplit(b, " "), "[[", 2)
cats = substring(sapply(strsplit(b, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(c)){
temp=c(temp,sum(as.numeric(quantities[which(cats==c[i])])))
}
paste0("(",c,":",temp,")",collapse="-")
paste0("(",c," : ",temp,")",collapse="-")
paste0("(",c," : ",temp,") ",collapse="-")
paste0(" (",c," : ",temp,") ",collapse="-")
paste0(" (",c," : ",temp,") ",collapse="-")
paste0("(",c," : ",temp,") ",collapse="-")
paste0("(",c," : ",temp,") ",collapse="- ")
paste0("(",c," : ",temp,")",collapse="- ")
paste0("(",c," : ",temp,")",collapse=" - ")
stockList <- function(listOfArt, listOfCat) {
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
b = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
is.character(b)
print("")
listOfArt = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
listOfCat = c("A", "B", "C", "D")
stockList(listOfArt)
stockList(listOfArt,listOfCat)
stockList <- function(listOfArt, listOfCat) {
if(!is.character(listOfArt)){print("");break}
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
stockList(listOfArt,listOfCat)
listOfArt = c("BBAR 150", "CDXE 515", "BKWR 250", "BTSQ 890", "DRTY 600", "XRAV 1")
listOfCat = c("A", "B", "C", "D")
stockList(listOfArt,listOfCat)
listOfArt = c(1,2,3,4)
stockList(listOfArt,listOfCat)
if(!is.character(listOfArt)){print("");break}
if(!is.character(listOfArt)){
print("");
break
}
!is.character(listOfArt)
if(!is.character(listOfArt)){
print("")
}
print0("")
cat("")
cat("")
print("")
stockList <- function(listOfArt, listOfCat) {
if(!is.character(listOfArt)){
print("")
}
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
stockList(listOfArt,listOfCat)
?break
?stop
if(!is.character(listOfArt)){
print("");
stop()
}
if(!is.character(listOfArt)){
print("");
}
stockList <- function(listOfArt, listOfCat) {
if(!is.character(listOfArt)){
print("");
}
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
stockList(listOfArt,listOfCat)
listOfArt = c(1,2,3,4)
listOfCat = c("A", "B", "C", "D")
stockList <- function(listOfArt, listOfCat) {
if(!is.character(listOfArt)){
print("");
}else{
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
}
stockList(listOfArt,listOfCat)
if(is.null(listOfArt)|is.null(listOfCat)){print("")}else{
if(!is.character(listOfArt)){
print("");
}else{
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
}
stockList <- function(listOfArt, listOfCat) {
if(is.null(listOfArt)|is.null(listOfCat)){print("")}else{
if(!is.character(listOfArt)){
print("");
}else{
quantities = sapply(strsplit(listOfArt, " "), "[[", 2)
cats = substring(sapply(strsplit(listOfArt, " "), "[[", 1),1,1)
temp = c()
t2 = list()
for(i in 1:length(listOfCat)){
temp=c(temp,sum(as.numeric(quantities[which(cats==listOfCat[i])])))
}
paste0("(",listOfCat," : ",temp,")",collapse=" - ")
}
}
}
stockList(listOfArt,listOfCat)
listOfArt = c(1,2,3,4)
listOfCat = c("A", "B", "C", "D")
listOfArt = c()
stockList(listOfArt,listOfCat)
listOfArt = c()
knitr::opts_chunk$set(echo = TRUE)
multivar_kalman <- function(x, R, Q, A, C, m0, P0) {
if (!is.matrix(x)) {
x <- matrix(x)
}
nsteps <- nrow(x
)
same_A <- !is.list(A); if(same_A) { A <- list(A) }
same_Q <- !is.list(Q); if(same_Q) { Q <- list(Q) }
same_C <- !is.list(C); if(same_C) { C <- list(C) }
same_R <- !is.list(R); if(same_R) { R <- list(R) }
m <- matrix(NA, nrow = nsteps, ncol = ncol(x))
P <- vector("list", length = nsteps)
mpred <- m0
Ppred <- P0
for (i in seq(1:nsteps)) {
# to enable varying C, R, Q and A per timestep
ci = ifelse(same_C, 1, i)
ri = ifelse(same_R, 1, i)
qi = ifelse(same_Q, 1, i)
ai = ifelse(same_A, 1, i)
# Observation update step
K <- Ppred %*% t(C[[ci]]) %*% solve(C[[ci]] %*% Ppred %*% t(C[[ci]]) + R[[ri]])
m[i, ] <- mpred + K %*% (x[i, ] - C[[ci]] %*% mpred)
P[[i]] <- (diag(ncol(x)) - K %*% C[[ci]]) %*% Ppred
# Prediction step
mpred <- A[[ai]] %*% m[i, ]
Ppred <- A[[ai]] %*% P[[i]] %*% t(A[[ai]]) + Q[[qi]]
}
list(means = m, covs = P)
}
seq(1,200,1l)
seq(1,200,1L)
seq(1,3.5,1L)
library(astsa)
substitute(chicken)
chicken
x = chicken
x = chicken
x = chicken
substitute(x)
library(TSA)
library(tseries)
adf.test()
View(multivar_kalman)
twats[1]
library(jsonlite)
library(jsonlite)
library(rjson)
tweets = from(file="/Users/pedram/Desktop/tweets.json")
resp <- httr::GET(twats)
cont_raw <- content(resp)
str(cont_raw, max.level = 3, list.len = 4)
users =  readLines("users.json",n=4)
getwd()
setwd("/User/Pedram/Desktop")
setwd("/User/pedram/Desktop")
setwd("/User/pedram/desktop")
read.csv2("BrentOilPrices")
read.csv2("BrentOilPrices.csv")
getwd()
setwd("/Users/pedram/Desktop/Text\ Mining\ /project\")
setwd("/Users/pedram/Desktop/Text/Mining/project/")
View(multivar_kalman)
setwd("~/Desktop/Trump-Tweets.nosync")
# Naive bayes
library(e1071)
labeled = read.csv('export_dataframe.csv')
labeled = labeled[,c(3,2)]
colnames(labeled)= c("Text", "Sentiment")
labeled$Sentiment = ifelse(labeled$Sentiment == "neg", -1, 1 )
labeled$Text = as.character(labeled$Text)
randomsample = sample(1:11914,1000,replace = F) #400 samples
labeled2 =  labeled[randomsample,]
train = labeled2$Text[1:100,]
train = labeled2$Text[1:100]
test = labeled2$Text[101:1000]
test
test[10]
library(tm)
library(RTextTools)
library(e1071)
library(dplyr)
library(caret)
# Library for parallel processing
library(doMC)
install.packages("caret")
install.packages("doMC")
# Library for parallel processing
library(doMC)
library(caret)
registerDoMC(cores=detectCores())
corpus <- Corpus(VectorSource(labeled2$Text))
corpus
inspect(corpus[1:3])
corpus.clean <- corpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(stripWhitespace)
dtm <- DocumentTermMatrix(corpus.clean)
inspect(dtm[40:50, 10:15])
df.train = labeled2[1:100]
df.test = labeled2[101:1000,]
df.train = labeled2[1:100,]
dtm.train <- dtm[1:1500,]
dtm.test <- dtm[101:1000,]
dtm.train <- dtm[1:100,]
corpus.clean.train <- corpus.clean[1:100]
corpus.clean.test <- corpus.clean[101:1000]
dim(dtm.train)
fivefreq <- findFreqTerms(dtm.train, 5)
length((fivefreq))
dtm.train.nb <- DocumentTermMatrix(corpus.clean.train, control=list(dictionary = fivefreq))
dim(dtm.train.nb)
convert_count <- function(x) {
y <- ifelse(x > 0, 1,0)
y <- factor(y, levels=c(0,1), labels=c("No", "Yes"))
y
}
trainNB <- apply(dtm.train.nb, 2, convert_count)
testNB <- apply(dtm.test.nb, 2, convert_count)
## [1]  1500 12144
dtm.test.nb <- DocumentTermMatrix(corpus.clean.test, control=list(dictionary = fivefreq))
dim(dtm.train.nb)
convert_count <- function(x) {
y <- ifelse(x > 0, 1,0)
y <- factor(y, levels=c(0,1), labels=c("No", "Yes"))
y
}
